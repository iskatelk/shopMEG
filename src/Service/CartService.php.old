<?php

namespace App\Service;

use App\Entity\Products;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\HttpFoundation\Session\SessionInterface;

class CartService
{
    private $session;

    public function __construct(EntityManagerInterface $entityManager, SessionInterface $session)
    {
        $this->entityManager = $entityManager;
        $this->session = $session;
    }

    public function add($id,$quantity)
    {
        $cart = $this->session->get('cart', []);
      //  if (!empty($cart[$id])) {
            $cart[$id]=$quantity;
       /* } /*else {
            $cart[$id] = 1;
        }*/
        $this->session->set('cart', $cart);
    }

    public function get()
    {
        return $this->session->get('cart');
    }

    public function remove()
    {
        return $this->session->remove('cart');
    }

    public function delete($id)
    {
        $cart = $this->session->get('cart', []);
        unset($cart[$id]);

        return $this->session->set('cart', $cart);
    }

    public function decrease($id)
    {
        $cart = $this->session->get('cart', []);
        if ($cart[$id] > 1) {
            --$cart[$id];
        } else {
            //            unset($cart[$id]);
        }

        return $this->session->set('cart', $cart);
    }

    public function increase($id)
    {
        $cart = $this->session->get('cart', []);
        if ($cart[$id] > 0) {
            ++$cart[$id];
        } else {
            unset($cart[$id]);
        }

        return $this->session->set('cart', $cart);
    }

    public function getFull()
    {
        $cartComplete = [];
        if ($this->get()) {
            foreach ($this->get() as $id => $quantity) {
                $product_object = $this->entityManager->getRepository(Products::class)->findOneById($id);
                if (!$product_object) {
                    $this->delete($id);
                    continue;
                }
                $cartComplete[] = [
                    'product' => $product_object,
                    'quantity' => $quantity,
                    'subTotal' => $quantity * $product_object->getPrice(),
                ];
            }
        }

        return $cartComplete;
    }
}
